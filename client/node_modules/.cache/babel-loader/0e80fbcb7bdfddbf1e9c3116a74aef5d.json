{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/becca/Code/recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/becca/Code/recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/becca/Code/recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/becca/Code/recipe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar SchemaTypeOptions = require('./SchemaTypeOptions');\n/**\n * The options defined on an Array schematype.\n *\n * ####Example:\n *\n *     const schema = new Schema({ tags: [String] });\n *     schema.path('tags').options; // SchemaArrayOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaArrayOptions\n */\n\n\nvar SchemaArrayOptions =\n/*#__PURE__*/\nfunction (_SchemaTypeOptions) {\n  _inherits(SchemaArrayOptions, _SchemaTypeOptions);\n\n  function SchemaArrayOptions() {\n    _classCallCheck(this, SchemaArrayOptions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SchemaArrayOptions).apply(this, arguments));\n  }\n\n  return SchemaArrayOptions;\n}(SchemaTypeOptions);\n\nvar opts = require('./propertyOptions');\n/**\n * If this is an array of strings, an array of allowed values for this path.\n * Throws an error if this array isn't an array of strings.\n *\n * @api public\n * @property enum\n * @memberOf SchemaArrayOptions\n * @type Array\n * @instance\n */\n\n\nObject.defineProperty(SchemaArrayOptions.prototype, 'enum', opts);\n/*!\n * ignore\n */\n\nmodule.exports = SchemaArrayOptions;","map":null,"metadata":{},"sourceType":"script"}